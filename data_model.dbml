// dbdocs: https://dbdocs.io/matthias/OpenLabelsInitiative
// interactive visualization: https://dbdiagram.io/d/OLI-65c538c3ac844320aec4000e

Project OpenLabelsInitiative {
  database_type: 'PostgreSQL'
  Note: '''
    *A standardized framework and data model for EVM address labeling*

    OLI aims to tackle the issue of isolated and non-standardized contract and wallet labeling datasets within the blockchain data community. By introducing a standardized data model for smart contract and wallet labels we advocate for the consolidation into a single, universally accessible data structure utilized by various data providers. 

    Find the OLI repo [here](https://github.com/openlabelsinitiative/OLI).
  '''
}

enum chain_vm {
    EVM
    SVM
    CairoVM
}

Table Chains {
  chain_slug string [pk]
  evm_chain_id int [note: "see chainlist"]
  name string
  website string
  gas_token string
  chain_vm chain_vm

  Note: "Is used to map addresses to a chain. Chain_id (PK) is based on the chain's id (see chainlist)."
}

Table Addresses {
  address string [pk]
  chain_slug string [pk]
  project_id unknown 
  category_id string
  is_eoa bool
  is_proxy bool
  name string
  bytecode bytea
  abi string
  deployment_date timestamp
  deployer_address unknown

  Note: "Represents wallet and smart contract addresses, linked to chains, projects, and categorization."
}

Table Projects {
  project_id unknown [pk]
  name string
  team_id string
  website string
  docs string
  oss_slug string
  token_symbol string

  Note: "Information about specific projects (i.e. Uniswap V2), including project name, website link, and documentation."
}

enum category_id {
  mev
  trading
  cex
  lending
  dex
  derivative
  staking
  nft_fi
  nft_marketplace
  erc721
  erc1155
  community
  gambling
  gaming
  native_transfer
  stablecoin
  erc20
  middleware
  erc4337
  inscriptions
  oracle
  depin
  developer_tools
  identity
  privacy
  insurance
  airdrop
  payments
  other
  cc_communication
  bridge
}

Table Categories {
  category_id string [pk]
  name string
  definition string
  main_category_id string

  Note: "A classification system that can be used for grouping contracts and wallets into specific categories."
}

enum main_category_id {
  cefi
  defi
  nft
  social
  token_transfers
  utility
  cross_chain
}

Table MainCategories {
  main_category_id main_category_id [pk]
  name string
  definition string

  Note: "A higher-level categorization that can group multiple categories under a broader classification."
}

Table TagGroup {
  tag_group_id unknown [pk]
  name string
  description string

  Note: "Represents collections of tags that can be applied to other entities in the system for organizational purposes."
}

Table Tags {
  tag_id unknown [pk]
  name string
  tag_group_id unknown
  description string
  additional_attributes json

  Note: "Individual labels or identifiers that can be applied to data points for sorting, searching, and categorization purposes."
}

Table TagMapping {
  address string 
  tag_id unknown

  Note: "A many-to-many relationship table that maps tags to addresses, allowing an address to have multiple tags and a tag to be applied to multiple addresses."
}

Table Team {
  team_id unknown [pk]
  name string

  Note: "A group of people or entities working on projects, with a simple structure containing just an ID and a name."
}

// Relationships
// ManyToManyTagging
Ref: Tags.tag_group_id > TagGroup.tag_group_id
Ref: TagMapping.tag_id > Tags.tag_id
Ref: TagMapping.address > Addresses.address

// OneToManyCategorization
Ref: Categories.main_category_id > MainCategories.main_category_id

// OneToManyProjectsToTeams
Ref: Projects.team_id > Team.team_id

// OneToManyAddressesToChains
Ref: Addresses.chain_slug > Chains.chain_slug

// OneToManyAddressesToProjects
Ref: Addresses.project_id > Projects.project_id

// OneToManyAddressesToCategories
Ref: Addresses.category_id > Categories.category_id
