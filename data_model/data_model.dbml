// interactive visualization: https://dbdiagram.io/d/OLI-660bbef003593b6b61f058cb

// Version: 1.0

Project OLI {
  database_type: 'PostgreSQL'
  Note: '''
    *A standardized framework and data model for EVM address labeling*

    OLI aims to tackle the issue of isolated and non-standardized contract and wallet labeling datasets within the blockchain data community. By introducing a standardized data model for smart contract and wallet labels we advocate for the consolidation into a single, universally accessible data structure utilized by various data providers. 

    Find the OLI repo [here](https://github.com/openlabelsinitiative/OLI).
  '''
}

Table Tags {
  tag_id string [pk, Note: "A slug that acts as unique identifier for this tag. Namespaces can be assigned."]
  name string [Note: "The name of this tag in human-readable format."]
  description string [Note: "A short description of this tag and its purpose."]
  type string [Note: "The datatype that associated values can take."]
  value_set list [Note: "If set, this list acts as enums for this tag. Only values from this values set can be assigned."]
  creator string [Note: "Creator of this tag id."]
  version float [Note: "The versioning of the tag. Whenever a value set change happens, the versioning will also change."]

  Note: "Individual tags or identifiers that can be applied to addresses for sorting, searching, and categorization purposes."
}

Table TagMapping {
  address string [pk]
  chain_id string [pk, Note: "Unique chain identifier according to CAIP-2 standard."]
  tag_id string [pk]
  value string

  Note: "A many-to-many relationship table that maps tags to addresses, allowing an address to have multiple tags and a tag to be applied to multiple addresses."
}

// Relationships
// ManyToManyTagging
Ref: TagMapping.tag_id > Tags.tag_id